#!/bin/bash

set -e

PELTON_CONFIG_DIR=${PELTON_CONFIG_DIR:-$HOME/pelton}
PELTON_DNS_PREFIX=${PELTON_DNS_PREFIX:-"pltn-"}

export DOCKER_CMD=${DOCKER_CMD:-docker}
export DOCKER_REGISTRY=${DOCKER_REGISTRY:-localhost:32000}
export KUBECTL_CMD=${KUBECTL_CMD:-microk8s kubectl}

POSITIONAL_ARGS=()

while [[ $# -gt 0 ]]; do
  case $1 in
    --isolation)
        ISOLATION="$2"
        shift
        shift
        ;;
    -*|--*)
      echo "Unknown option $1"
      exit 1
      ;;
    *)
      POSITIONAL_ARGS+=("$1") # save positional arg
      shift # past argument
      ;;
  esac
done

set -- "${POSITIONAL_ARGS[@]}" # restore positional parameters

if [[ -z "$1" ]]; then
    echo 'Must specify a named configuration as the first argument.'
    exit 1
fi

TARGET_DIR=${2:-.}
cd $TARGET_DIR

if [[ ! -f pelton.json ]]; then
    echo "$TARGET_DIR does not have a pelton.json file."
    exit 1
fi

ISOLATION=${ISOLATION:-niliso}

PROJECT_NAME=$(cat pelton.json | jq -r '.projectName')
PROJECT_DNS_NAME=$(cat pelton.json | jq -r '.projectDnsName');

PROJECT_NAMED_CONFIG=$(cat pelton.json | jq -r ".configurations.$1")
PROJECT_START=$(echo "$PROJECT_NAMED_CONFIG" | jq -r '.start // ""')

pelton-build-environment $1 "$(pwd)" --isolation $ISOLATION \
| pelton-sync-ns - \
        "$PELTON_DNS_PREFIX$PROJECT_DNS_NAME-$1-$ISOLATION"

PROJECT_SERVICE_NAME=$( \
        pelton-read-config ".configurations.$1.serviceName // \"\"")

if [[ -n "$PROJECT_SERVICE_NAME" ]]; then
    pelton-kc $1 $ISOLATION -- logs --follow svc/$PROJECT_SERVICE_NAME
    echo Disconnected from logs. Service is still running!
fi
